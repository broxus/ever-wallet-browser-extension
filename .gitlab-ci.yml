stages:
  - build
  - release

variables:
  GIT_STRATEGY: clone
  BRANCH_NAME: sparx-ci

before_script:
  - apk add --no-cache git jq bash zip unzip curl
  - curl -fsSL https://bun.sh/install | bash
  - git config --global user.email "ci@broxus.com"
  - git config --global user.name "${GITLAB_TOKEN_USERNAME}"

build:
  stage: build
  image: node:23-alpine
  tags:
    - docker
  script:
    - git checkout $CI_COMMIT_REF_NAME
    - bun install --frozen-lockfile
    - bun run build:prod
    - bash scripts/create-archive.sh -v prod
    - bun run build:beta
    - bash scripts/create-archive.sh -v beta
  artifacts:
    paths:
      - release/
    expire_in: 1 week
  rules:
    - if: '$CI_COMMIT_MESSAGE !~ /Automatic version update for release/'
    - if: '$CI_COMMIT_REF_NAME == $BRANCH_NAME'

release:
  stage: release
  image: node:23-alpine
  tags:
    - docker
  script:
    - git clone https://${GITLAB_TOKEN_USERNAME}:${GITLAB_TOKEN_PASSWORD}@gitlab.broxus.com/wallet/browser-extension.git
    - cd browser-extension
    - git checkout $CI_COMMIT_REF_NAME
    - bash scripts/update-package-version.sh
    - git add package.json
    - git commit -m "Automatic version update for release"
    - git push origin $CI_COMMIT_REF_NAME
    - bash scripts/create-tag.sh
    - bun install --frozen-lockfile
    - bun run build:prod
    - bash scripts/create-archive.sh -v prod
    - bun run build:beta
    - bash scripts/create-archive.sh -v beta
  artifacts:
    paths:
      - release/
    expire_in: 1 week
  when: manual
  rules:
    - if: '$CI_COMMIT_REF_NAME == $BRANCH_NAME'
